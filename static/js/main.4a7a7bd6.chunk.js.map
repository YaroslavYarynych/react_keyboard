{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","useKey","handlerKeyUp","componentDidMount","event","setState","key","document","addEventListener","componentWillUnmount","removeEventListener","className","this","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,OAAQ,IAFZ,EAKEC,kBALF,IAOEC,kBAAoB,WAClB,EAAKD,aAAe,SAACE,GACnB,EAAKC,SAAS,CAAEJ,OAAQG,EAAME,OAGhCC,SAASC,iBAAiB,QAAS,EAAKN,eAZ5C,EAeEO,qBAAuB,WACrBF,SAASG,oBAAoB,QAAS,EAAKR,eAhB/C,4CAmBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIC,KAAKZ,MAAMC,OAAZ,mCAE+BW,KAAKZ,MAAMC,OAF1C,KACG,kCAxBd,GAAyBY,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.4a7a7bd6.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  useKey: string,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    useKey: '',\n  };\n\n  handlerKeyUp!: (event: KeyboardEvent) => void;\n\n  componentDidMount = () => {\n    this.handlerKeyUp = (event: KeyboardEvent) => {\n      this.setState({ useKey: event.key });\n    };\n\n    document.addEventListener('keyup', this.handlerKeyUp);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keyup', this.handlerKeyUp);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!this.state.useKey\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${this.state.useKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}